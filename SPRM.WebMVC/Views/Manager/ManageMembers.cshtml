@model IEnumerable<SPRM.Data.Entities.User>
@{
    ViewData["Title"] = "Manage Members";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-primary">
                    <i class="fas fa-users me-2"></i>Manage Members
                </h2>
                <div>
                    <a href="@Url.Action("Index", "Manager")" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
                    </a>
                    <button type="button" class="btn btn-success crud-create" data-bs-toggle="modal" data-bs-target="#inviteMemberModal">
                        <i class="fas fa-user-plus me-1"></i>Invite Member
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter and Search -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row align-items-end">
                        <div class="col-md-3">
                            <label for="roleFilter" class="form-label">Filter by Role</label>
                            <select class="form-select" id="roleFilter">
                                <option value="">All Roles</option>
                                <option value="Student">Student</option>
                                <option value="Lecturer">Lecturer</option>
                                <option value="Manager">Manager</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="statusFilter" class="form-label">Filter by Status</label>
                            <select class="form-select" id="statusFilter">
                                <option value="">All Status</option>
                                <option value="Active">Active</option>
                                <option value="Inactive">Inactive</option>
                                <option value="Pending">Pending</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="searchInput" class="form-label">Search Members</label>
                            <input type="text" class="form-control" id="searchInput" placeholder="Search by name or email...">
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary w-100" onclick="applyFilters()">
                                <i class="fas fa-search me-1"></i>Search
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Members Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-list me-2"></i>Team Members
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="membersTable" class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Avatar</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Status</th>
                                    <th>Projects</th>
                                    <th>Join Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var member in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="avatar-circle">
                                                    @if (!string.IsNullOrEmpty(member.FullName))
                                                    {
                                                        var nameParts = member.FullName.Split(' ');
                                                        if (nameParts.Length >= 2)
                                                        {
                                                            @nameParts[0].Substring(0, 1).ToUpper()@nameParts[nameParts.Length - 1].Substring(0, 1).ToUpper()
                                                        }
                                                        else
                                                        {
                                                            @member.FullName.Substring(0, 1).ToUpper()
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span>?</span>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@member.FullName</strong>
                                                    <br>
                                                    <small class="text-muted">@member.Username</small>
                                                </div>
                                            </td>
                                            <td>@member.Email</td>
                                            <td>
                                                <span class="badge bg-info">Student</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-success">Active</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">0 projects</span>
                                            </td>
                                            <td>@DateTime.Now.AddDays(-30).ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <div class="btn-group crud-actions" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-primary crud-view" 
                                                            data-bs-target="#memberDetailsModal"
                                                            data-url="@Url.Action("GetMemberDetails", "Manager")" 
                                                            data-id="@member.Id" 
                                                            title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <a href="@Url.Action("AssignMember", "Manager", new { memberId = member.Id })" 
                                                       class="btn btn-sm btn-outline-success" title="Assign to Project">
                                                        <i class="fas fa-plus"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-warning crud-edit" 
                                                            data-bs-target="#editMemberModal"
                                                            data-url="@Url.Action("GetMember", "Manager")" 
                                                            data-id="@member.Id" 
                                                            title="Edit Member">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger crud-delete" 
                                                            data-url="@Url.Action("RemoveMember", "Manager")" 
                                                            data-id="@member.Id" 
                                                            data-message="Are you sure you want to remove '@member.FullName' from the team?" 
                                                            title="Remove Member">
                                                        <i class="fas fa-user-minus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    @if (Model == null || !Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted">No team members found</h5>
                            <p class="text-muted">Invite your first team member to get started.</p>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#inviteMemberModal">
                                <i class="fas fa-user-plus me-1"></i>Invite First Member
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Invite Member Modal -->
<div class="modal fade" id="inviteMemberModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="fas fa-user-plus me-2"></i>Invite Team Member
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form id="inviteMemberForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="inviteEmail" class="form-label">Email Address *</label>
                        <input type="email" class="form-control" id="inviteEmail" name="Email" required>
                        <div class="form-text">We'll send an invitation to this email address.</div>
                    </div>
                    <div class="mb-3">
                        <label for="inviteRole" class="form-label">Role *</label>
                        <select class="form-select" id="inviteRole" name="Role" required>
                            <option value="">Select Role</option>
                            <option value="Student">Student</option>
                            <option value="Lecturer">Lecturer</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="inviteMessage" class="form-label">Invitation Message</label>
                        <textarea class="form-control" id="inviteMessage" name="Message" rows="3" 
                                  placeholder="Optional personal message to include with the invitation"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-paper-plane me-1"></i>Send Invitation
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Member Details Modal -->
<div class="modal fade" id="memberDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-user me-2"></i>Member Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="memberDetailsContent">
                    <!-- Member details will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Member Modal -->
<div class="modal fade" id="editMemberModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="fas fa-edit me-2"></i>Edit Member
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editMemberForm">
                <div class="modal-body">
                    <input type="hidden" id="editMemberId" name="Id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editFirstName" class="form-label">First Name *</label>
                            <input type="text" class="form-control" id="editFirstName" name="FirstName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editLastName" class="form-label">Last Name *</label>
                            <input type="text" class="form-control" id="editLastName" name="LastName" required>
                        </div>
                        <div class="col-md-12 mb-3">
                            <label for="editEmail" class="form-label">Email *</label>
                            <input type="email" class="form-control" id="editEmail" name="Email" required>
                        </div>
                        <div class="col-md-12 mb-3">
                            <label for="editRole" class="form-label">Role *</label>
                            <select class="form-select" id="editRole" name="Role" required>
                                <option value="Student">Student</option>
                                <option value="Lecturer">Lecturer</option>
                                <option value="Manager">Manager</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-save me-1"></i>Update Member
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        font-weight: bold;
        font-size: 14px;
    }

    .card {
        border: 1px solid #e3e6f0;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }

    .btn-group .btn {
        margin-right: 2px;
    }

    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#membersTable').DataTable({
                responsive: true,
                pageLength: 10,
                language: {
                    search: "Search members:",
                    lengthMenu: "Show _MENU_ members per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ members",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });

            // Invite member form submission
            $('#inviteMemberForm').on('submit', function(e) {
                e.preventDefault();
                
                $.ajax({
                    url: '@Url.Action("InviteMember", "Manager")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.success) {
                            $('#inviteMemberModal').modal('hide');
                            toastr.success('Invitation sent successfully!');
                            $('#inviteMemberForm')[0].reset();
                        } else {
                            toastr.error(response.message || 'Failed to send invitation');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while sending the invitation');
                    }
                });
            });

            // Edit member form submission
            $('#editMemberForm').on('submit', function(e) {
                e.preventDefault();
                
                $.ajax({
                    url: '@Url.Action("UpdateMember", "Manager")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.success) {
                            $('#editMemberModal').modal('hide');
                            toastr.success('Member updated successfully!');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to update member');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while updating the member');
                    }
                });
            });
        });

        function applyFilters() {
            var table = $('#membersTable').DataTable();
            var roleFilter = $('#roleFilter').val();
            var statusFilter = $('#statusFilter').val();
            var searchInput = $('#searchInput').val();

            // Apply search
            table.search(searchInput).draw();
            
            // Apply role filter (would need server-side implementation for full functionality)
            if (roleFilter) {
                table.column(3).search(roleFilter).draw();
            } else {
                table.column(3).search('').draw();
            }
        }

        function viewMember(memberId) {
            $.ajax({
                url: '@Url.Action("GetMemberDetails", "Manager")',
                type: 'GET',
                data: { id: memberId },
                success: function(data) {
                    $('#memberDetailsContent').html(data);
                    $('#memberDetailsModal').modal('show');
                },
                error: function() {
                    toastr.error('Failed to load member details');
                }
            });
        }

        function editMember(memberId) {
            $.ajax({
                url: '@Url.Action("GetMember", "Manager")',
                type: 'GET',
                data: { id: memberId },
                success: function(member) {
                    $('#editMemberId').val(member.id);
                    $('#editFirstName').val(member.firstName);
                    $('#editLastName').val(member.lastName);
                    $('#editEmail').val(member.email);
                    $('#editRole').val(member.role || 'Student');
                    $('#editMemberModal').modal('show');
                },
                error: function() {
                    toastr.error('Failed to load member details');
                }
            });
        }

        function removeMember(memberId, memberName) {
            if (confirm(`Are you sure you want to remove "${memberName}" from your team? This action cannot be undone.`)) {
                $.ajax({
                    url: '@Url.Action("RemoveMember", "Manager")',
                    type: 'POST',
                    data: { memberId: memberId },
                    success: function(response) {
                        if (response.success) {
                            toastr.success('Member removed successfully!');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to remove member');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while removing the member');
                    }
                });
            }
        }
    </script>
}
